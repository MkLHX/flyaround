<?php

namespace Proxies\__CG__\WCS\CoavBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Flight extends \WCS\CoavBundle\Entity\Flight implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'id', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'departure', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'arrival', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'pilot', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'freeSeats', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'takeofTime', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'flight', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'plane', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'model');
        }

        return array('__isInitialized__', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'id', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'departure', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'arrival', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'pilot', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'freeSeats', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'takeofTime', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'flight', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'plane', '' . "\0" . 'WCS\\CoavBundle\\Entity\\Flight' . "\0" . 'model');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Flight $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeparture($departure)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeparture', array($departure));

        return parent::setDeparture($departure);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeparture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeparture', array());

        return parent::getDeparture();
    }

    /**
     * {@inheritDoc}
     */
    public function setArrival($arrival)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArrival', array($arrival));

        return parent::setArrival($arrival);
    }

    /**
     * {@inheritDoc}
     */
    public function getArrival()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArrival', array());

        return parent::getArrival();
    }

    /**
     * {@inheritDoc}
     */
    public function setPilot($pilot)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPilot', array($pilot));

        return parent::setPilot($pilot);
    }

    /**
     * {@inheritDoc}
     */
    public function getPilot()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPilot', array());

        return parent::getPilot();
    }

    /**
     * {@inheritDoc}
     */
    public function setFreeSeats($freeSeats)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFreeSeats', array($freeSeats));

        return parent::setFreeSeats($freeSeats);
    }

    /**
     * {@inheritDoc}
     */
    public function getFreeSeats()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFreeSeats', array());

        return parent::getFreeSeats();
    }

    /**
     * {@inheritDoc}
     */
    public function setTakeofTime($takeofTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTakeofTime', array($takeofTime));

        return parent::setTakeofTime($takeofTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getTakeofTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTakeofTime', array());

        return parent::getTakeofTime();
    }

    /**
     * {@inheritDoc}
     */
    public function addFlight(\WCS\CoavBundle\Entity\Reservation $flight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFlight', array($flight));

        return parent::addFlight($flight);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFlight(\WCS\CoavBundle\Entity\Reservation $flight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFlight', array($flight));

        return parent::removeFlight($flight);
    }

    /**
     * {@inheritDoc}
     */
    public function getFlight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFlight', array());

        return parent::getFlight();
    }

    /**
     * {@inheritDoc}
     */
    public function setFlight(\WCS\CoavBundle\Entity\Reservation $flight = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFlight', array($flight));

        return parent::setFlight($flight);
    }

    /**
     * {@inheritDoc}
     */
    public function setPlane(\WCS\CoavBundle\Entity\PlaneModel $plane = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlane', array($plane));

        return parent::setPlane($plane);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlane()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlane', array());

        return parent::getPlane();
    }

    /**
     * {@inheritDoc}
     */
    public function setModel(\WCS\CoavBundle\Entity\PlaneModel $model = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModel', array($model));

        return parent::setModel($model);
    }

    /**
     * {@inheritDoc}
     */
    public function getModel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModel', array());

        return parent::getModel();
    }

}
